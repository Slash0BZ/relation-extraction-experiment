package org.cogcomp.re;
import edu.illinois.cs.cogcomp.core.datastructures.textannotation.*;

discrete entity_type(Constituent c) <- {
    return c.getAttribute("GOLD_EntityType");
}

discrete entity_subtype(Constituent c) <- {
    return c.getAttribute("GOLD_EntitySubtype");
}

discrete entity_mention_type(Constituent c) <- {
    return c.getAttribute("GOLD_EntityMentionType");
}

discrete% entity_type_features(Constituent c) <- {
    String featureVec = c.getAttribute("EntityType");
    String[] features = featureVec.split(",");
    for (int i = 0; i < features.length; i++){
        sense features[i];
    }
}

discrete% entity_level_features(Constituent c) <- {
    String featureVec = c.getAttribute("EntityMentionType");
    sense featureVec;
}

discrete% word_features(Constituent c) <- {
    sense c.toString();
}

discrete entity_level_classifier(Constituent c) <-
learn entity_mention_type
    using entity_level_features, entity_type_features, word_features
    from new PredictedMentionSupportReader("data/original")
    10 rounds
    with SupportVectorMachine{

    }
    testFrom new PredictedMentionSupportReader("data/original")
    progressOutput 20000
end

discrete entity_subtype_classifier(Constituent c) <-
learn entity_subtype
    using entity_type_features, word_features, entity_level_features
    from new PredictedMentionSupportReader("data/original")
    10 rounds
    with SupportVectorMachine{

    }
    testFrom new PredictedMentionSupportReader("data/original")
    progressOutput 20000
end

discrete entity_type_classifier(Constituent c) <-
learn entity_type
    using entity_type_features, word_features
    from new PredictedMentionSupportReader("data/original")
    10 rounds
    with SupportVectorMachine{

    }
    testFrom new PredictedMentionSupportReader("data/original")
    progressOutput 20000
end