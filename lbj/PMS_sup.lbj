package org.cogcomp.re;
import edu.illinois.cs.cogcomp.core.datastructures.textannotation.*;
import edu.illinois.cs.cogcomp.core.datastructures.Pair;
import java.util.*;

discrete entity_type(Constituent c) <- {
    return c.getAttribute("EntityType");
}

discrete entity_subtype(Constituent c) <- {
    return c.getAttribute("EntitySubtype");
}

discrete% entity_level_features(Constituent c) <- {
    String featureVec = c.getAttribute("EntityMentionType");
    sense featureVec;
}

discrete% word_features(Constituent c) <- {
    sense c.toString();
}

discrete% offset_features(Constituent c) <- {
    sense c.getStartSpan();
    sense c.getEndSpan();
}

discrete% bow_features(Constituent c) <- {
    for (int i = c.getStartSpan(); i < c.getEndSpan(); i++){
        sense c.getTextAnnotation().getToken(i);
    }
}

discrete% additional_features(Constituent c) <- {
}

real% hym_features(Constituent c) <- {
    SupportFeatureExtractor sfe = new SupportFeatureExtractor();
    List ret = sfe.getHypernymFeature(c);
    for (int i = 0; i < ret.size(); i++){
        Pair p = (Pair)ret.get(i);
        System.out.println(p.getFirst());
        sense (String)p.getFirst() : (Double)p.getSecond();
    }
}

discrete entity_type_classifier(Constituent c) <-
learn entity_type
    using bow_features, hym_features
    from new ACEMentionReader("data/partition/train/0", "entity")
    10 rounds
    with SupportVectorMachine{

    }
    testFrom new ACEMentionReader("data/partition/eval/0", "entity")
    progressOutput 20000
end

discrete entity_subtype_classifier(Constituent c) <-
learn entity_subtype
    using bow_features, hym_features, additional_features
    from new ACEMentionReader("data/original", "entity")
    10 rounds
    with SupportVectorMachine{

    }
    testFrom new ACEMentionReader("data/original", "entity")
    progressOutput 20000
end